{"version":3,"sources":["static/images/v1.mp4","static/images/11.jpg","static/images/bg.jpg","static/images/01.JPG","static/images/02.JPG","static/images/03.JPG","static/images/04.jpg","static/images/05.JPG","static/images/06.JPG","static/images/07.JPG","static/images/08.JPG","static/images/09.JPG","static/images/10.JPG","utils/axios.js","utils/http.js","components/sliderCom.jsx","history.js","components/swiperTwo/index.jsx","pages/home/homePage.jsx","router.js","App.js","serviceWorker.js","saga/index.js","reducer/index.js","index.js","store/index.js"],"names":["module","exports","__webpack_require__","p","axios","interceptors","request","use","config","error","Promise","reject","response","instance","create","baseURL","timeout","headers","Content-Type","token","localStorage","getItem","transformRequest","data","transformResponse","httpGet","parmas","url","reslove","get","params","Object","objectSpread","then","res","status","JSON","parse","success","message","msg","statusText","catch","httpPost","post","qs","stringify","handleHttp","httpLists","containHttp","_containHttp","getMenuLists","_getMenuLists","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","abrupt","stop","this","apply","arguments","getAllProduct","_getAllProduct","_callee2","_context2","_x","getAllClass","_getAllClass","_callee3","_context3","_x2","addClass","_addClass","_callee4","_context4","console","log","_x3","getFirstClass","_getFirstClass","_callee5","_context5","addProduct","_addProduct","_callee6","_context6","_x4","removeList","_removeList","_callee7","id","_context7","_x5","addUserInfo","_addUserInfo","_callee8","_context8","_x6","login","_login","_callee9","_context9","_x7","addOrder","_addOrder","_callee10","_context10","_x8","getOrderLists","_getOrderLists","_callee11","_context11","_x9","orderPay","_orderPay","_callee12","_context12","_x10","orderInfo","_orderInfo","_callee13","_context13","_x11","getOrder","_getOrder","_callee14","_context14","_x12","comments","_comments","_callee15","_context15","_x13","getProductInfo","_getProductInfo","_callee16","_context16","_x14","defineProperty","_getProductInfo2","_callee17","_context17","_x15","_getAllDistributorByArea","_callee18","_context18","_x16","_makeAppointment","_callee19","_context19","_x17","createHistory","Menu","SubMenu","Component","SwiperCom","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","react_default","createElement","className","react_id_swiper_lib_default","pagination","el","type","clickable","bulletClass","bulletElement","bulletActiveClass","children","makeAppointment","router","path","component","HomePage","_this","state","detailsPicListsOne","require","cont","distributorLists","name","carLists","distributorVal","carValue","tel","e","setState","target","value","_this$state","test","MEDIA_LEAD_ID","FK_DEALER_ID","CUSTOMER_NAME","SMART_CODE","OPERATE_TYPE","STATUS","MOBILE","window","location","href","_this2","_this$state2","src","bg","alt","placeholder","onChange","handleName","handleTel","selectDistributor","map","i","index","key","onTouchStart","handleSubmit","bind","video1","controls","swiperTwo_SwiperCom","peizhi","onClick","linkToMore","exact","App","resetWidth","baseWidth","document","documentElement","clientWidth","body","style","fontSize","addEventListener","Switch","routers","Route","Boolean","hostname","match","rootSaga","action","username","password","take","passWord","put","removeItem","setItem","_marked","all","fork","_marked2","totalState","reducer","length","undefined","assign","store","initialState","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSaga","run","CreateStore","ReactDOM","render","es","HashRouter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66e6d5dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/v1.cf57a25e.mp4\";","module.exports = __webpack_public_path__ + \"static/media/11.95a3a0e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.36132d14.jpg\";","module.exports = __webpack_public_path__ + \"static/media/01.c548f0d9.JPG\";","module.exports = __webpack_public_path__ + \"static/media/02.36a18917.JPG\";","module.exports = __webpack_public_path__ + \"static/media/03.82361016.JPG\";","module.exports = __webpack_public_path__ + \"static/media/04.d27798ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/05.19bce1e5.JPG\";","module.exports = __webpack_public_path__ + \"static/media/06.920924b5.JPG\";","module.exports = __webpack_public_path__ + \"static/media/07.f01a079a.JPG\";","module.exports = __webpack_public_path__ + \"static/media/08.d5bde776.JPG\";","module.exports = __webpack_public_path__ + \"static/media/09.dcff60d6.JPG\";","module.exports = __webpack_public_path__ + \"static/media/10.e1987526.JPG\";","import axios from 'axios'\r\nimport {\r\n    message\r\n} from 'antd';\r\nimport qs from 'qs'\r\n// 添加请求拦截器\r\naxios.interceptors.request.use(function (config) {\r\n    // 在发送请求之前做些什么\r\n    return config;\r\n}, function (error) {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n});\r\n\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(function (response) {\r\n    // 对响应数据做点什么\r\n    return response;\r\n}, function (error) {\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n});\r\nvar instance = axios.create({\r\n    // baseURL: 'http://localhost:7001/',\r\n    // baseURL: 'http://39.105.193.91:7001/',\r\n    baseURL: 'http://202.96.191.228:8080/',\r\n    // baseURL: 'http://localhost:7002/',\r\n    // baseURL: '120.78.173.0/',\r\n    timeout: 1000,\r\n    headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        token: localStorage.getItem('token') || ''\r\n    },\r\n    // `transformRequest` 允许在向服务器发送前，修改请求数据\r\n    // 只能用在 'PUT', 'POST' 和 'PATCH' 这几个请求方法\r\n    // 后面数组中的函数必须返回一个字符串，或 ArrayBuffer，或 Stream\r\n    transformRequest: [function (data) {\r\n        // 对 data 进行任意转换处理\r\n\r\n        return data;\r\n    }],\r\n\r\n    // `transformResponse` 在传递给 then/catch 前，允许修改响应数据\r\n    transformResponse: [function (data) {\r\n        // 对 data 进行任意转换处理\r\n\r\n        return data;\r\n    }],\r\n});\r\nexport const httpGet = (parmas) => {\r\n    const {\r\n        url,\r\n        data\r\n    } = parmas\r\n    return new Promise((reslove, reject) => {\r\n        instance.get(url, {\r\n                params: {\r\n                    ...data\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    let data = JSON.parse(res.data)\r\n                    if (data.success) {\r\n                        reslove(data)\r\n                    } else {\r\n                        reslove(data)\r\n                        message.error(data.msg)\r\n                    }\r\n                } else {\r\n                    message.error(res.statusText)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                reject(error);\r\n            });\r\n    })\r\n}\r\n\r\nexport const httpPost = (parmas) => {\r\n    const {\r\n        url,\r\n        data\r\n    } = parmas\r\n    return new Promise((reslove, reject) => {\r\n        instance.post(\r\n                url, qs.stringify(data)\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    let data = JSON.parse(res.data)\r\n                    if (data.success) {\r\n                        reslove(data)\r\n                    } else {\r\n                        reslove(data)\r\n                        message.error(data.msg)\r\n                    }\r\n                } else {\r\n                    message.error(res.statusText)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                reject(error);\r\n                message.error(error)\r\n            });\r\n    })\r\n}","import {\r\n    httpGet,\r\n    httpPost\r\n} from './axios'\r\nconst handleHttp = (res) => {\r\n    return new Promise((reslove, reject) => {\r\n        reslove(res)\r\n    })\r\n}\r\nconst httpLists = {\r\n    containHttp: {\r\n        //获取菜单\r\n        async getMenuLists() {\r\n            const res = await httpGet({\r\n                url: '/getMenuLists',\r\n                data: {}\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //获取所有的商品\r\n        async getAllProduct(data) {\r\n            const res = await httpGet({\r\n                url: '/findLists',\r\n                data: {\r\n                    ...data\r\n                }\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //获取所有的分类\r\n        async getAllClass(data) {\r\n            const res = await httpGet({\r\n                url: '/getClass',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //添加分类\r\n        async addClass(data) {\r\n            console.log(data)\r\n            const res = await httpPost({\r\n                url: '/addClass',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //获取一级分类\r\n        async getFirstClass() {\r\n            const res = await httpGet({\r\n                url: '/getFirstClass',\r\n                data: {}\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //添加商品\r\n        async addProduct(data) {\r\n            const res = await httpPost({\r\n                url: '/addProduct',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //删除商品\r\n        async removeList(id) {\r\n            const res = await httpPost({\r\n                url: '/removeProduct',\r\n                data: {\r\n                    id\r\n                }\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //用户注册\r\n        async addUserInfo(data) {\r\n            const res = await httpPost({\r\n                url: '/addUserInfo',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //用户登陆\r\n        async login(data) {\r\n            const res = await httpPost({\r\n                url: '/login',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //添加订单\r\n        async addOrder(data) {\r\n            const res = await httpPost({\r\n                url: '/addOrder',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //获取列表\r\n        async getOrderLists(data) {\r\n            const res = await httpGet({\r\n                url: '/orderLists',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //支付\r\n        async orderPay(data) {\r\n            const res = await httpPost({\r\n                url: '/orderPay',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //获取订单详情\r\n        async orderInfo(data) {\r\n            const res = await httpGet({\r\n                url: '/orderInfo',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //收货\r\n        async getOrder(data) {\r\n            const res = await httpPost({\r\n                url: '/getOrder',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //评论\r\n        async comments(data) {\r\n            const res = await httpPost({\r\n                url: '/comments',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //获取商品详情\r\n        async getProductInfo(data) {\r\n            const res = await httpGet({\r\n                url: '/getProductInfo',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n\r\n\r\n\r\n\r\n        //获取省市级区\r\n        async getProductInfo(data) {\r\n            const res = await httpGet({\r\n                url: '/getArea',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //根据省市区查询经销商\r\n        async getAllDistributorByArea(data) {\r\n            const res = await httpGet({\r\n                url: '/getAllDistributorByArea',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n        //预约\r\n        async makeAppointment(data) {\r\n            const res = await httpPost({\r\n                url: '/MediaInterface/BaseInfoService.svc',\r\n                data\r\n            })\r\n            return handleHttp(res)\r\n        },\r\n\r\n    }\r\n}\r\nexport default httpLists","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport httpLists from '../utils/http'\r\nimport history from '../history';\r\nimport './common.less'\r\nlet { containHttp } = httpLists\r\nconst { getMenuLists } = containHttp\r\nconst SubMenu = Menu.SubMenu;\r\nclass SliderCom extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            collapsed: false,\r\n            menuLists: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getMenuData()\r\n    }\r\n    //获取菜单\r\n    getMenuData() {\r\n        getMenuLists().then(res => {\r\n            if (res.success) {\r\n                this.setState({\r\n                    menuLists: res.data\r\n                })\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { menuLists } = this.state\r\n        return (\r\n            <div className=\"slider\">\r\n                <Menu\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                    inlineCollapsed={this.state.collapsed}\r\n                >\r\n                    {\r\n                        menuLists.map((i, index) => (\r\n                            <Menu.Item key={index}>\r\n                                <Link to={i.firstUrl}>\r\n                                    <Icon type=\"pie-chart\" />\r\n                                    <span>{i.firstMenu}</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                        ))\r\n                    }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SliderCom","// src/history.js\r\nimport createHistory from 'history/createBrowserHistory';\r\nexport default createHistory();","import React, { Component } from 'react'\r\nimport Swiper from 'react-id-swiper';\r\nimport './index.less'\r\nexport default class SwiperCom extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render() {\r\n        const params = {\r\n            pagination: {\r\n                el: '.pagination_btns',\r\n                type: 'bullets',\r\n                clickable: true,\r\n                bulletClass:'btn',\r\n                bulletElement:'div',\r\n                bulletActiveClass:\"btn_active\"\r\n            },\r\n        }\r\n        return (\r\n            <div className=\"swiper\" >\r\n                <Swiper {...params}>\r\n                    {this.props.children}\r\n                </Swiper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SwiperCom from '../../components/swiperTwo/index'\r\nimport video1 from '../../static/images/v1.mp4'\r\nimport peizhi from '../../static/images/11.jpg'\r\nimport './home.less'\r\nimport bg from \"../../static/images/bg.jpg\"\r\nimport httpLists from '../../utils/http'\r\nimport {\r\n    message,\r\n} from 'antd';\r\nlet { containHttp } = httpLists\r\nconst {\r\n    makeAppointment\r\n} = containHttp\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            detailsPicListsOne: [\r\n                {\r\n                    url: require('../../static/images/01.JPG'),\r\n                    cont: '19英寸个性轮辋'\r\n                },\r\n                {\r\n                    url: require('../../static/images/02.JPG'),\r\n                    cont: '19英寸个性轮辋'\r\n                }, {\r\n                    url: require('../../static/images/03.JPG'),\r\n                    cont: '19英寸个性轮辋'\r\n                }, {\r\n                    url: require('../../static/images/04.jpg'),\r\n                    cont: '19英寸个性轮辋'\r\n                }, {\r\n                    url: require('../../static/images/05.JPG'),\r\n                    cont: '19英寸个性轮辋'\r\n                }, {\r\n                    url: require('../../static/images/06.JPG'),\r\n                    cont: '19英寸个性轮辋'\r\n                }, {\r\n                    url: require('../../static/images/07.JPG'),\r\n                    cont: '19英寸个性轮辋'\r\n                }, {\r\n                    url: require('../../static/images/08.JPG'),\r\n                    cont: '19英寸个性轮辋'\r\n                }, {\r\n                    url: require('../../static/images/09.JPG'),\r\n                    cont: '19英寸个性轮辋'\r\n                }, {\r\n                    url: require('../../static/images/10.JPG'),\r\n                    cont: '19英寸个性轮辋'\r\n                },\r\n            ],\r\n            distributorLists: [\r\n                {\r\n                    name: '广汽传祺三和店',\r\n                    id: '1'\r\n                },\r\n                {\r\n                    name: '广汽传祺新元素店',\r\n                    id: '2'\r\n                },\r\n                {\r\n                    name: '广汽传祺金致店',\r\n                    id: '3'\r\n                },\r\n                {\r\n                    name: '广汽传祺长缘捷龙店',\r\n                    id: '4'\r\n                },\r\n                {\r\n                    name: '广汽传祺益传中宝店',\r\n                    id: '5'\r\n                },\r\n                {\r\n                    name: '广汽传祺信祺店',\r\n                    id: '6'\r\n                },\r\n            ],\r\n            carLists: [\r\n                {\r\n                    name: '第七代天籁',\r\n                    id: 213\r\n                },\r\n                {\r\n                    name: '轩逸经典',\r\n                    id: 26\r\n                },\r\n                {\r\n                    name: '轩逸',\r\n                    id: 34\r\n                },\r\n                {\r\n                    name: '奇骏',\r\n                    id: 205\r\n                },\r\n                {\r\n                    name: '逍客',\r\n                    id: 21\r\n                },\r\n                {\r\n                    name: '蓝鸟',\r\n                    id: 194\r\n                },\r\n                {\r\n                    name: '楼兰',\r\n                    id: 197\r\n                },\r\n                {\r\n                    name: '劲客',\r\n                    id: 208\r\n                },\r\n                {\r\n                    name: '骐达',\r\n                    id: 29\r\n                },\r\n                {\r\n                    name: '途达',\r\n                    id: 210\r\n                }\r\n            ],\r\n            distributorVal: '',\r\n            carValue: '',\r\n            name: '',\r\n            tel: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps() {\r\n    }\r\n    //选转经销商\r\n    selectDistributor(e) {\r\n        this.setState({\r\n            distributorVal: e.target.value\r\n        })\r\n    }\r\n    //选择车型\r\n    selectCar(e) {\r\n        this.setState({\r\n            carValue: e.target.value\r\n        })\r\n    }\r\n    //提交\r\n    handleSubmit() {\r\n        const {\r\n            name,\r\n            tel,\r\n            distributorVal,\r\n        } = this.state\r\n        if (name && tel && distributorVal) {\r\n            if ((/^1[34578]\\d{9}$/.test(tel))) {\r\n                makeAppointment({\r\n                    MEDIA_LEAD_ID: '124840',\r\n                    FK_DEALER_ID: distributorVal,\r\n                    CUSTOMER_NAME: name,\r\n                    SMART_CODE: 'A0000-000-000-00-00000',\r\n                    OPERATE_TYPE: 0,\r\n                    STATUS: '0',\r\n                    MOBILE: tel\r\n                })\r\n\r\n            } else {\r\n                message.error('请输入正确的手机号')\r\n            }\r\n        } else {\r\n            message.error('请填写完整信息')\r\n        }\r\n    }\r\n    handleName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n    handleTel(e) {\r\n        this.setState({\r\n            tel: e.target.value\r\n        })\r\n    }\r\n    linkToMore(){\r\n        window.location.href = 'https://www.gacmotor.com'\r\n    }\r\n    render() {\r\n        const {\r\n            distributorLists,\r\n            carLists,\r\n            distributorVal,\r\n            carValue,\r\n            detailsPicListsOne,\r\n        } = this.state\r\n        return (\r\n            <div className=\"home_page\">\r\n                <img className=\"bg1\" src={bg} alt=\"\" />\r\n                <div className=\"ask_price\">\r\n                    <div className=\"fill_lists\">\r\n                        <div className=\"fill_list\">\r\n                            <div className=\"fill_val\">\r\n                                <input type=\"text\" placeholder=\"姓名\" onChange={e => this.handleName(e)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"fill_list\">\r\n                            <div className=\"fill_val\">\r\n                                <input type=\"text\" placeholder=\"电话\" onChange={e => this.handleTel(e)} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"fill_list\">\r\n                            <div className=\"fill_val\">\r\n                                <select\r\n                                    onChange={e => this.selectDistributor(e)}\r\n                                    value={distributorVal}\r\n                                >\r\n                                    <option value=\"\" >意向经销商</option>\r\n                                    {\r\n                                        distributorLists.map((i, index) => {\r\n                                            return (\r\n                                                <option value={i.id} key={index}>{i.name}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <div className=\"fill_list fill_list_last\">\r\n                            <div className=\"fill_val\">\r\n                                <select\r\n                                    onChange={e => this.selectCar(e)}\r\n                                    value={carValue}\r\n                                >\r\n                                    <option value=\"\" >意向车型</option>\r\n                                    {\r\n                                        carLists.map((i, index) => {\r\n                                            return (\r\n                                                <option value={i.id} key={index}>{i.name}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div> */}\r\n                    </div>\r\n                    <div className=\"submit_btn\" onTouchStart={this.handleSubmit.bind(this)}>马上预约</div>\r\n                </div>\r\n                <div className=\"vadio\">\r\n                    <video src={video1} controls=\"controls\"></video>\r\n                </div>\r\n                <div className=\"swiper_cont\">\r\n                    <SwiperCom>\r\n                        {\r\n                            detailsPicListsOne.map((i, index) => {\r\n                                return (\r\n                                    <div className=\"detail_pic\" key={index}>\r\n                                        <img className=\"detail_img\" src={i.url} />\r\n                                        {/* <div className=\"detail_content\">{i.cont}</div> */}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </SwiperCom>\r\n                </div>\r\n                <div className=\"peizhi\">\r\n                    <img className=\"bg1\" src={peizhi} alt=\"\" />\r\n                </div>\r\n                <div className=\"link_to_more\" onClick={this.linkToMore}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HomePage\r\n","import HomePage from './pages/home/homePage'\r\n// import productAddPage from './pages/productAdd/productAdd'\r\n// import ClassPage from './pages/class/class'\r\n// import User from './pages/user/user'\r\n// import Order from './pages/order/order'\r\n// import OrderDetail from './pages/orderDetail/orderDetail'\r\n// import ProductDetail from './pages/productDetail/productDetail'\r\n// import SwiperCom from './components/swiper/index'\r\nexport const router = [\r\n    {\r\n        path:'/',\r\n        component:HomePage,\r\n        exact:true\r\n    },\r\n    // {\r\n    //     path:'/productAdmin',\r\n    //     component:productAddPage,\r\n    //     exact:true\r\n    // },\r\n    // {\r\n    //     path:'/class',\r\n    //     component:ClassPage,\r\n    //     exact:true\r\n    // },\r\n    // {\r\n    //     path:'/user',\r\n    //     component:User,\r\n    //     exact:true\r\n    // },\r\n    // {\r\n    //     path:'/orderLists',\r\n    //     component:Order,\r\n    //     exact:true\r\n    // },\r\n    // {\r\n    //     path:'/orderDetail',\r\n    //     component:OrderDetail,\r\n    //     exact:true\r\n    // },\r\n    // {\r\n    //     path:'/productDetail',\r\n    //     component:ProductDetail,\r\n    //     exact:true\r\n    // },\r\n    // {\r\n    //     path:'/swiper',\r\n    //     component:SwiperCom,\r\n    //     exact:true\r\n    // }\r\n]","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport SliderCom from './components/sliderCom'\r\nimport { router as routers } from './router.js'\r\nimport 'antd/dist/antd.css';\r\nimport './App.less';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  componentDidMount() {\r\n    function resetWidth() {\r\n      var baseWidth = document.documentElement.clientWidth || document.body.clientWidth;\r\n      // 默认的设置是375px(ip6)的根元素设为100px, 其他的手机都相对这个进行调整   \r\n      document.documentElement.style.fontSize = baseWidth / 375 * 100 + 'px'\r\n    } resetWidth();\r\n    window.addEventListener('resize', function () {\r\n      resetWidth();\r\n    })\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          {\r\n            routers.map((i, index) => (\r\n              <Route exact={i.exact} path={i.path} component={i.component} key={index}></Route>\r\n            ))\r\n          }\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n    message\r\n} from 'antd';\r\nimport {\r\n    take,\r\n    all,\r\n    fork,\r\n    put,\r\n    call,\r\n} from 'redux-saga/effects';\r\nimport {\r\n    httpGet,\r\n    httpPost\r\n} from '../utils/axios';\r\n\r\nfunction* login() {\r\n    while (true) {\r\n        const action = yield take('LOGIN');\r\n        const {\r\n            username,\r\n            password\r\n        } = action\r\n        const res = yield call(httpPost, {\r\n            url: '/login',\r\n            data: {\r\n                name: username,\r\n                passWord: password\r\n            }\r\n        })\r\n        if (username && password) {\r\n            if (res.success) {\r\n                yield put({\r\n                    type: 'LOGIN'\r\n                })\r\n                localStorage.removeItem('token')\r\n                localStorage.setItem('token', res.data.token)\r\n                message.success(res.msg)\r\n            } else {\r\n                yield put({\r\n                    type: 'LOGIN'\r\n                })\r\n\r\n            }\r\n        } else {\r\n            message.error('请填写完整信息')\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(login),\r\n    ]);\r\n}","let totalState = {\r\n    token:null,\r\n};\r\nexport default function (state = totalState, action) {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return Object.assign({}, state, {\r\n                token: action.token\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter,HashRouter} from 'react-router-dom';\r\nimport './index.less';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// import 'whatwg-fetch';\r\n// import 'babel-polyfill';\r\nimport {Provider} from 'react-redux';\r\nimport rootSaga from './saga';\r\nimport CreateStore from './store';\r\nconst store=CreateStore();\r\nstore.runSaga(rootSaga);\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App />\r\n        </HashRouter>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducer from '../reducer';\r\nexport default function configureStore(initialState) {\r\n  // 注意：必须满足 redux@>=3.1.0 才可以将 middleware 作为 createStore 的最后一个参数传递\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  return {\r\n    ...createStore(reducer, initialState, applyMiddleware(sagaMiddleware)),\r\n     runSaga: sagaMiddleware.run\r\n   }\r\n}"],"sourceRoot":""}